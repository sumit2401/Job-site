'use client'

import { motion } from "framer-motion"
import { Avatar, AvatarImage } from "@/components/ui/avatar"
import { Badge } from "@/components/ui/badge"
import { Check, X } from 'lucide-react'
import { Candidate } from "../types"

interface CandidateCardProps {
  candidate: Candidate
  index: number
}

export function CandidateCard({ candidate, index }: CandidateCardProps) {
  return (
    <motion.div
      initial={{ opacity: 0, y: 20, scale: 0.95 }}
      animate={{ opacity: 1, y: 0, scale: 1 }}
      transition={{ delay: index * 0.1 + 0.5 }}
      className="bg-white rounded-xl p-4 shadow-lg relative"
      style={{
        marginTop: index > 0 ? '-2rem' : 0,
        zIndex: 3 - index,
      }}
    >
      <div className="flex items-center justify-between gap-4">
        <div className="flex items-center gap-3">
          <Avatar className="w-10 h-10 border border-gray-100">
            <AvatarImage src={candidate.avatar} alt={candidate.name} />
          </Avatar>
          <div className="flex flex-col">
            <div className="flex items-center gap-2">
              <span className="font-medium text-gray-900">{candidate.name}</span>
              <Badge className="bg-emerald-50 text-emerald-700 text-xs font-medium">
                {candidate.status}
              </Badge>
            </div>
            <div className="flex items-center gap-2 text-sm text-gray-600">
              <span>Experience in</span>
              <Badge variant="secondary" className="bg-purple-100 text-purple-900 font-normal">
                {candidate.experience[0]}
              </Badge>
            </div>
          </div>
        </div>
        <div className="flex gap-1">
          <button className="p-1.5 rounded-full text-emerald-500 hover:bg-emerald-50 transition-colors">
            <Check className="w-5 h-5" />
          </button>
          <button className="p-1.5 rounded-full text-rose-500 hover:bg-rose-50 transition-colors">
            <X className="w-5 h-5" />
          </button>
        </div>
      </div>
    </motion.div>
  )
}

//

'use client'

import { useState, useEffect } from "react"
import { motion, AnimatePresence } from "framer-motion"
import { Avatar, AvatarImage } from "@/components/ui/avatar"
import { Badge } from "@/components/ui/badge"
import { Card } from "@/components/ui/card"
import { CandidateCard } from "./candidate-card"
import { Candidate } from "../types"

const candidates: Candidate[] = [
  {
    id: "1",
    name: "Joshua Moret",
    avatar: "/placeholder.svg",
    experience: ["PYTHON"],
    status: "INTERESTED"
  },
  {
    id: "2",
    name: "Naomi Liu",
    avatar: "/placeholder.svg",
    experience: ["PYTHON"],
    status: "INTERESTED"
  },
  {
    id: "3",
    name: "Guy Leonardo",
    avatar: "/placeholder.svg",
    experience: ["PYTHON"],
    status: "INTERESTED"
  }
]

const floatingAvatars = Array(8).fill(null).map((_, i) => ({
  id: i,
  src: "/placeholder.svg",
  initialX: Math.random() * 300 - 150,
  initialY: Math.random() * 300 - 150,
}))

export function ChatInterface() {
  const [isSearching, setIsSearching] = useState(true)
  const [showResults, setShowResults] = useState(false)

  useEffect(() => {
    const timer = setTimeout(() => {
      setIsSearching(false)
      setShowResults(true)
    }, 3000)
    return () => clearTimeout(timer)
  }, [])

  return (
    <div className="relative min-h-[600px]">
      <div className="absolute right-0 top-0">
        <img src="https://hebbkx1anhila5yf.public.blob.vercel-storage.com/image-D69Lr8mNV72PR8YSrVa3eB9QPKDwnB.png" alt="Wellfound AI Logo" className="h-8" />
      </div>
      
      <div className="space-y-4">
        <div className="flex items-center gap-3">
          <Avatar className="w-12 h-12 border-2 border-white/20">
            <AvatarImage src="/placeholder.svg" alt="AI Assistant" />
          </Avatar>
          <Card className="bg-white text-gray-900 p-3 rounded-full max-w-md">
            <p className="flex items-center gap-2 text-sm">
              Send me candidates interested in
              <Badge className="bg-amber-100 text-amber-900 font-normal">FINTECH</Badge>
              with experience in
              <Badge className="bg-purple-100 text-purple-900 font-normal">PYTHON</Badge>
            </p>
          </Card>
        </div>

        <motion.div
          initial={{ opacity: 0, y: 10 }}
          animate={{ opacity: 1, y: 0 }}
          className="bg-pink-500 text-white py-3 px-6 rounded-full max-w-md ml-14"
        >
          Sending you a list of relevant candidates now.
        </motion.div>

        {isSearching && (
          <div className="relative h-40">
            <p className="text-pink-500 text-sm ml-14">searching...</p>
            <div className="absolute inset-0">
              <AnimatePresence>
                {floatingAvatars.map((avatar) => (
                  <motion.div
                    key={avatar.id}
                    className="absolute"
                    initial={{ 
                      x: avatar.initialX,
                      y: avatar.initialY,
                      opacity: 0,
                      scale: 0.5
                    }}
                    animate={{ 
                      x: [avatar.initialX, avatar.initialX + 50, avatar.initialX - 50],
                      y: [avatar.initialY, avatar.initialY - 50, avatar.initialY + 50],
                      opacity: [0, 1, 0],
                      scale: [0.5, 1, 0.5]
                    }}
                    transition={{
                      duration: 2,
                      repeat: Infinity,
                      repeatType: "reverse",
                      delay: avatar.id * 0.2
                    }}
                  >
                    <Avatar className="w-10 h-10 border border-white/20">
                      <AvatarImage src="/placeholder.svg" alt="Floating Avatar" />
                    </Avatar>
                  </motion.div>
                ))}
              </AnimatePresence>
            </div>
          </div>
        )}

        {showResults && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.2 }}
            className="bg-white/5 backdrop-blur-sm rounded-2xl p-6 mt-8"
          >
            <h2 className="text-xl font-semibold text-purple-100 mb-8">
              Your qualified candidate review list
            </h2>
            <div className="space-y-2">
              {candidates.map((candidate, index) => (
                <CandidateCard key={candidate.id} candidate={candidate} index={index} />
              ))}
            </div>
          </motion.div>
        )}
      </div>
    </div>
  )
}

//
'use client'

import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { ChatInterface } from "./components/chat-interface"

export default function WellfoundAI() {
  return (
    <div className="min-h-screen bg-[#1a0f2e] text-white">
      <div className="max-w-7xl mx-auto px-4 py-12 md:py-24">
        <div className="grid md:grid-cols-2 gap-16 items-start">
          {/* Left Column */}
          <div className="space-y-6">
            <Badge className="bg-pink-500 hover:bg-pink-600 text-white border-0">
              Early Access
            </Badge>
            
            <div className="space-y-4">
              <h1 className="text-4xl md:text-6xl font-bold tracking-tight">
                Meet wellfound<span className="text-pink-500">:ai</span>
              </h1>
              <h2 className="text-4xl md:text-6xl font-bold tracking-tight">
                Wellfound&apos;s AI recruiter.
              </h2>
            </div>

            <p className="text-gray-300 text-lg leading-relaxed max-w-xl">
              Here to help with all the logistics. wellfound:ai finds best fit candidates, vets
              for interest, and schedules your favorites on your calendar â€” all in a matter of days.
            </p>
            
            <p className="text-xl font-medium italic text-pink-500">
              It&apos;s that easy.
            </p>
            
            <Button variant="outline" size="lg" className="bg-white text-purple-900 hover:bg-gray-100">
              Learn more
            </Button>
          </div>

          {/* Right Column */}
          <div className="relative">
            <ChatInterface />
          </div>
        </div>
      </div>
    </div>
  )
}

//

/** @type {import('tailwindcss').Config} */
module.exports = {
    content: [
      './pages/**/*.{ts,tsx}',
      './components/**/*.{ts,tsx}',
      './app/**/*.{ts,tsx}',
      './src/**/*.{ts,tsx}',
    ],
    theme: {
      extend: {
        colors: {
          purple: {
            900: '#1a0f2e',
          },
        },
      },
    },
    plugins: [],
  }
  
//
export interface Candidate {
    id: string
    name: string
    avatar: string
    experience: string[]
    status: 'INTERESTED'
  }
  
  